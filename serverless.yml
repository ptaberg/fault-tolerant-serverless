org: mptashyts
app: fault-tolerant-backend
service: fault-tolerant-backend

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  memorySize: 512
  timeout: 29 # Keep under 30s to match SQS visibility timeout
  environment:
    STAGE: ${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:GetQueueAttributes
          Resource:
            - Fn::GetAtt: [TaskQueue, Arn]
            - Fn::GetAtt: [TaskDLQ, Arn]
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

package:
  patterns:
    - '!./**'
    - 'src/**'
    - 'package.json'
    - 'package-lock.json'
    - 'tsconfig.json'
    - '!src/**/*.test.ts'
    - '!src/**/*.spec.ts'

functions:
  submitTask:
    handler: src/handlers/index.submitTask
    events:
      - httpApi:
          path: /tasks
          method: post
    environment:
      TASK_QUEUE_URL:
        Ref: TaskQueue
    memorySize: 512
    timeout: 10

  processTask:
    handler: src/handlers/index.processTask
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - TaskQueue
              - Arn
          batchSize: 2
          maximumBatchingWindow: 2
          functionResponseType: ReportBatchItemFailures
    environment:
      MAX_RETRIES: 2
      TASK_QUEUE_URL:
        Ref: TaskQueue
      TASK_DLQ_URL:
        Ref: TaskDLQ
    memorySize: 512
    timeout: 29

  monitorDLQ:
    handler: src/handlers/index.monitorDLQ
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - TaskDLQ
              - Arn
          batchSize: 2
          maximumBatchingWindow: 2
          functionResponseType: ReportBatchItemFailures
    memorySize: 512
    timeout: 29

resources:
  Resources:
    TaskQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-task-queue-${self:provider.stage}
        VisibilityTimeout: 30
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - TaskDLQ
              - Arn
          maxReceiveCount: 2
        Tags:
          - Key: Environment
            Value: ${self:provider.stage}

    TaskDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-task-dlq-${self:provider.stage}
        MessageRetentionPeriod: 1209600 # 14 days
        Tags:
          - Key: Environment
            Value: ${self:provider.stage}

  Outputs:
    TaskQueueUrl:
      Description: URL of the main task queue
      Value:
        Ref: TaskQueue
      Export:
        Name: ${self:service}-${self:provider.stage}-task-queue-url

    TaskDLQUrl:
      Description: URL of the dead letter queue
      Value:
        Ref: TaskDLQ
      Export:
        Name: ${self:service}-${self:provider.stage}-task-dlq-url